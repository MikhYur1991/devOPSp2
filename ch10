###
### 1. enable recovery options for grub, update main configuration file and find new item in grub2 config in /boot.
###
[root@localhost ~]# cat /boot/grub2/grub.cfg | grep "menuentry '"
menuentry 'CentOS Linux (3.10.0-1160.el7.x86_64) 7 (Core)' --class centos --class gnu-linux --class gnu --class os --unrestricted $menuentry_id_option 'gnulinux-3.10.0-1160.el7.x86_64-advanced-0707dce1-592e-4c26-8dfa-933720304628' {
menuentry 'CentOS Linux (0-rescue-83cc8689dffa4d498e07e03a67070705) 7 (Core)' --class centos --class gnu-linux --class gnu --class os --unrestricted $menuentry_id_option 'gnulinux-0-rescue-83cc8689dffa4d498e07e03a67070705-advanced-0707dce1-592e-4c26-8dfa-933720304628' {
[root@localhost ~]# cat /etc/default/grub 
GRUB_TIMEOUT=5
GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
GRUB_DEFAULT=saved
GRUB_DISABLE_SUBMENU=true
GRUB_TERMINAL_OUTPUT="console"
GRUB_CMDLINE_LINUX="crashkernel=auto rd.lvm.lv=centos/root rd.lvm.lv=centos/swap rhgb quiet"
#GRUB_DISABLE_RECOVERY="true"
[root@localhost ~]# grub2-mkconfig > /boot/grub2/grub.cfg 
Generating grub configuration file ...
Found linux image: /boot/vmlinuz-3.10.0-1160.el7.x86_64
Found initrd image: /boot/initramfs-3.10.0-1160.el7.x86_64.img
Found linux image: /boot/vmlinuz-0-rescue-83cc8689dffa4d498e07e03a67070705
Found initrd image: /boot/initramfs-0-rescue-83cc8689dffa4d498e07e03a67070705.img
done
[root@localhost ~]# cat /boot/grub2/grub.cfg | grep "menuentry '"
menuentry 'CentOS Linux (3.10.0-1160.el7.x86_64) 7 (Core)' --class centos --class gnu-linux --class gnu --class os --unrestricted $menuentry_id_option 'gnulinux-3.10.0-1160.el7.x86_64-advanced-0707dce1-592e-4c26-8dfa-933720304628' {
menuentry 'CentOS Linux (3.10.0-1160.el7.x86_64) 7 (Core) (recovery mode)' --class centos --class gnu-linux --class gnu --class os --unrestricted $menuentry_id_option 'gnulinux-3.10.0-1160.el7.x86_64-recovery-0707dce1-592e-4c26-8dfa-933720304628' {
menuentry 'CentOS Linux (0-rescue-83cc8689dffa4d498e07e03a67070705) 7 (Core)' --class centos --class gnu-linux --class gnu --class os --unrestricted $menuentry_id_option 'gnulinux-0-rescue-83cc8689dffa4d498e07e03a67070705-advanced-0707dce1-592e-4c26-8dfa-933720304628' {
menuentry 'CentOS Linux (0-rescue-83cc8689dffa4d498e07e03a67070705) 7 (Core) (recovery mode)' --class centos --class gnu-linux --class gnu --class os --unrestricted $menuentry_id_option 'gnulinux-0-rescue-83cc8689dffa4d498e07e03a67070705-recovery-0707dce1-592e-4c26-8dfa-933720304628' {

###
### 2. modify option vm.dirty_ratio:
###   - using echo utility
###   - using sysctl utility
###   - using sysctl configuration files
###
[root@localhost ~]# cat /proc/sys/vm/dirty_ratio 
30
[root@localhost ~]# echo '10' > /proc/sys/vm/dirty_ratio 
[root@localhost ~]# cat /proc/sys/vm/dirty_ratio 
10
[root@localhost ~]# sysctl -w vm.dirty_ratio=15
vm.dirty_ratio = 15
[root@localhost ~]# cat /proc/sys/vm/dirty_ratio 
15
[root@localhost ~]# vi /etc/sysctl.d/99-sysctl.conf
[root@localhost ~]# cat /etc/sysctl.d/99-sysctl.conf 
# sysctl settings are defined through files in
# /usr/lib/sysctl.d/, /run/sysctl.d/, and /etc/sysctl.d/.
#
# Vendors settings live in /usr/lib/sysctl.d/.
# To override a whole file, create a new file with the same in
# /etc/sysctl.d/ and put new settings there. To override
# only specific settings, add a file with a lexically later
# name in /etc/sysctl.d/ and put new settings there.
#
# For more information, see sysctl.conf(5) and sysctl.d(5).
vm.dirty_ratio=20
[root@localhost ~]# cat /proc/sys/vm/dirty_ratio 
15
[root@localhost ~]# sysctl --system
* Applying /usr/lib/sysctl.d/00-system.conf ...
* Applying /usr/lib/sysctl.d/10-default-yama-scope.conf ...
kernel.yama.ptrace_scope = 0
* Applying /usr/lib/sysctl.d/50-default.conf ...
kernel.sysrq = 16
kernel.core_uses_pid = 1
kernel.kptr_restrict = 1
net.ipv4.conf.default.rp_filter = 1
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.accept_source_route = 0
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.promote_secondaries = 1
net.ipv4.conf.all.promote_secondaries = 1
fs.protected_hardlinks = 1
fs.protected_symlinks = 1
* Applying /etc/sysctl.d/99-sysctl.conf ...
vm.dirty_ratio = 20
* Applying /etc/sysctl.conf ...
vm.dirty_ratio = 20
[root@localhost ~]# cat /proc/sys/vm/dirty_ratio 
20

###
### 1. Inspect initrd file contents. Find all files that are related to XFS filesystem
### and give a short description for every file.
###
[root@localhost ~]# lsinitrd | grep xfs | cat -b
     1	drwxr-xr-x   2 root     root            0 Nov 30 08:51 usr/lib/modules/3.10.0-1160.el7.x86_64/kernel/fs/xfs
     2	-rw-r--r--   1 root     root       335716 Oct 19  2020 usr/lib/modules/3.10.0-1160.el7.x86_64/kernel/fs/xfs/xfs.ko.xz
     3	-rwxr-xr-x   1 root     root          433 Sep 30  2020 usr/sbin/fsck.xfs
     4	-rwxr-xr-x   1 root     root       590208 Nov 30 08:51 usr/sbin/xfs_db
     5	-rwxr-xr-x   1 root     root          747 Sep 30  2020 usr/sbin/xfs_metadump
     6	-rwxr-xr-x   1 root     root       576720 Nov 30 08:51 usr/sbin/xfs_repair
1 - directory for kernel module XFS filesystem
2 - kernel module for XFS filesystem
3 - check filesystem utility for XFS fs
4 - multipurpose utility for XFS fs. It can check filesystem fragmentation for example
5 - copy metadata filesystem utility to the file
6 - repair utility for XFS fs

###
### 2. Study dracut utility that is used for rebuilding initrd image. 
### Give an example for adding driver/kernel module for your initrd and recreating it.
###
[root@localhost ~]# ls /lib/modules/3.10.0-1160.el7.x86_64/kernel/drivers/bluetooth/
ath3k.ko.xz    bfusb.ko.xz   btbcm.ko.xz    btmrvl.ko.xz       btrtl.ko.xz   btusb.ko.xz     hci_vhci.ko.xz
bcm203x.ko.xz  bpa10x.ko.xz  btintel.ko.xz  btmrvl_sdio.ko.xz  btsdio.ko.xz  hci_uart.ko.xz
[root@localhost ~]# dracut --add-drivers bcm203x /boot/initramfs_new.img 
[root@localhost ~]# lsinitrd /boot/initramfs_new.img | grep bcm203x
Arguments: --add-drivers 'bcm203x'
-rw-r--r--   1 root     root         3744 Oct 19  2020 usr/lib/modules/3.10.0-1160.el7.x86_64/kernel/drivers/bluetooth/bcm203x.ko.xz

###
### 3. Explain the difference between ordinary and rescue initrd images
###

[root@localhost ~]# lsinitrd /boot/initramfs-0-rescue-83cc8689dffa4d498e07e03a67070705.img > resc.txt; \
> expr `cat resc.txt | wc -l` - `cat resc.txt | grep -E 'modules|firmware' | wc -l`
1621
[root@localhost ~]# lsinitrd /boot/initramfs-3.10.0-1160.el7.x86_64.img > core.txt; \
> expr `cat core.txt | wc -l` - `cat core.txt | grep -E 'modules|firmware' | wc -l`
1586
[root@localhost ~]# cat core.txt | grep -E 'modules|firmware' | wc -l
128
[root@localhost ~]# cat resc.txt | grep -E 'modules|firmware' | wc -l
1633

So, rescue initrd image has more drivers and firmware

### 
### Disable selinux using kernel cmdline
###

[root@localhost ~]# getenforce 
Enforcing
[root@localhost ~]# cat /boot/grub2/grub.cfg | grep selinux
	linux16 /vmlinuz-3.10.0-1160.el7.x86_64 root=/dev/mapper/centos-root ro crashkernel=auto rd.lvm.lv=centos/root rd.lvm.lv=centos/swap selinux=0 rhgb quiet 
[root@localhost ~]# reboot
[....]
[guest1@localhost ~]$ getenforce
Disabled

###
### 1. Add rule using firewall-cmd that will allow SSH access to your server *only*
### from network 192.168.56.0/24 and interface enp0s8 
### (if your network and/on interface name differs - change it accordingly).
###
[root@localhost ~]# firewall-cmd --get-active-zones
public
  interfaces: enp0s3 enp0s8
[root@localhost ~]# firewall-cmd --zone=public --list-all
public (active)
  target: default
  icmp-block-inversion: no
  interfaces: enp0s3 enp0s8
  sources: 
  services: dhcpv6-client ssh
  ports: 
  protocols: 
  masquerade: no
  forward-ports: 
  source-ports: 
  icmp-blocks: 
  rich rules: 
[root@localhost ~]# firewall-cmd --new-zone=epam --permanent
success
[root@localhost ~]# firewall-cmd --zone=epam --change-interface=enp0s8 --permanent
The interface is under control of NetworkManager, setting zone to 'epam'.
success
[root@localhost ~]# firewall-cmd --reload
success
[root@localhost ~]# ifdown enp0s8
[root@localhost ~]# ifup enp0s8
[root@localhost ~]# firewall-cmd --zone=epam --list-all
epam (active)
  target: default
  icmp-block-inversion: no
  interfaces: enp0s8
  sources: 
  services: 
  ports: 
  protocols: 
  masquerade: no
  forward-ports: 
  source-ports: 
  icmp-blocks: 
  rich rules: 
[root@localhost ~]# firewall-cmd --zone=epam --add-service=ssh
success
[root@localhost ~]# firewall-cmd --zone=epam --list-all
epam (active)
  target: default
  icmp-block-inversion: no
  interfaces: enp0s8
  sources: 
  services: ssh
  ports: 
  protocols: 
  masquerade: no
  forward-ports: 
  source-ports: 
  icmp-blocks: 
  rich rules: 
[root@localhost ~]# firewall-cmd --zone=epam --add-source=192.168.56.0/24
success
[root@localhost ~]# firewall-cmd --zone=epam --list-all
epam (active)
  target: default
  icmp-block-inversion: no
  interfaces: enp0s8
  sources: 192.168.56.0/24
  services: ssh
  ports: 
  protocols: 
  masquerade: no
  forward-ports: 
  source-ports: 
  icmp-blocks: 
  rich rules: 
[root@localhost ~]# firewall-cmd --zone=public --remove-interface=enp0s3
success
[root@localhost ~]# firewall-cmd --get-active-zones
epam
  interfaces: enp0s8
  sources: 192.168.56.0/24
[root@localhost ~]# firewall-cmd --zone=drop --add-interface=enp0s3
success
[root@localhost ~]# firewall-cmd --reload
success
$ ssh guest1@127.0.0.1 -p 2222
kex_exchange_identification: read: Connection reset by peer
Connection reset by 127.0.0.1 port 2222

###
### 2. Shutdown firewalld and add the same rules via iptables.
###
[root@localhost ~]# systemctl disable firewalld --now
Removed symlink /etc/systemd/system/multi-user.target.wants/firewalld.service.
Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.
[root@localhost ~]# iptables -A INPUT -i enp0s8 -s 192.168.56.0/24 -p tcp --dport 22 -j ACCEPT
[root@localhost ~]# iptables -A INPUT -i enp0s8 -j REJECT
[root@localhost ~]# iptables -A INPUT -i enp0s3 -j REJECT
[root@localhost ~]# iptables -vnL
Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         
  253 18824 ACCEPT     tcp  --  enp0s8 *       192.168.56.0/24      0.0.0.0/0            tcp dpt:22
    7   308 DROP       all  --  enp0s8 *       0.0.0.0/0            0.0.0.0/0           
   34  2100 DROP       all  --  enp0s3 *       0.0.0.0/0            0.0.0.0/0           

Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         

Chain OUTPUT (policy ACCEPT 114 packets, 13254 bytes)
 pkts bytes target     prot opt in     out     source               destination         


